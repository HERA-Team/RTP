[dbinfo]
dbuser = obs
dbpasswd = P9ls4R*@
dbhost = 154.114.13.1
dbport = 3306
dbtype = mysql
dbname = hera_rtp

[Still]
hosts = AUTO
port = 14204
data_dir = /data/
path_to_do_scripts = /home/obs/src/RTP/scripts/hera
actions_per_still = 6
timeout = 14400
sleep_time = 5
block_size = 10
cluster_scheduler = 0

[WorkFlow]
###
# prioritize_obs : 0 or 1, disabled by default
# if enabled ( prioritize_obs = 1 ) we will make use the priority scheduling function: Scheduler.determine_priority
# this is mainly used with the neighbors = 1 option and attempts to prioritize neighbors first
###
prioritize_obs = 0
###
# neighbors : 0 or 1, by default this is disabled, set = 1 to enable
# If enabled we need to ensure we check to see if any other obsid's need to be processed
# before proceeding, if this is enabled the config option actions_end_file will be
# used for cases where all the neighbors to a obsid have already been processed
###
neighbors = 0
###
# lock_all_neighbors_to_same_still : 0 or 1, if enabled then all neighbor obsid's will be routed to the same still server
###
lock_all_neighbors_to_same_still = 0
###
# actions : comma seperated list of actions this workflow will perform in exact order.
# Do not use keywords NEW or COMPLETE, the system takes care of these internally, nothing is run on
# either the NEW or COMPLETE state, they are for internal tracking.  Once a workflow is completely
# finished it will be left in state COMPLETE.  To trigger the workflow set its Observation status to
# the first action in the workflow, note that the first does not do anything except act as a placeholder
###
actions=UV_POT,UV,UVC,CLEAN_UV,PLOTAUTOS,ADD_LIBRARIAN_PLOTAUTOS,CLEAN_PLOTAUTOS,PULL_SUBARRAY,ADD_LIBRARIAN_SUBARRAY,ANT_METRICS,ADD_LIBRARIAN_ANT_METRICS,FIRSTCAL,ADD_LIBRARIAN_FIRSTCAL,OMNICAL,ADD_LIBRARIAN_OMNICAL,OMNI_APPLY,XRFI,ADD_LIBRARIAN_CALCLEAN,CLEAN_FIRSTCAL,CLEAN_ANT_METRICS,CLEAN_OMNI,CLEAN_SUBARRAY,CLEAN_UVC,DELETE_RAW,COMPLETE
#OMNICAL
#UVCR,CLEAN_UVC,ACQUIRE_NEIGHBORS,UVCRE,NPZ,UVCRR,NPZ_POT,CLEAN_UVCRE,UVCRRE,CLEAN_UVCRR,CLEAN_NPZ,CLEAN_NEIGHBORS,UVCRRE_POT,CLEAN_UVCRRE,CLEAN_UVCR,COMPLETE

###
# actions_endfile :  only used when neighbors = 1
# This actions list will be used for an obsid after all of its neighbors have been processed
###
actions_endfile = UV_POT, UV, UVC, CLEAN_UV, COMPLETE
#UVCR, CLEAN_UVC, CLEAN_UVCR, COMPLETE
###
# prereqs : Add Prerequisites that neighbors must meet before proceeding to perform the specified action.
# Example below adds the prereqs UVCR and CLEAN_UVCR to the ACQUIRE_NEIGHBORS action.
# In order for a obsid to proceed onto ACQUIRE_NEIGHBORS all of its neighbors need to
# be in either the UVCR or CLEAN_UVCR state
###
[UV]
args = [basename, '%s:%s/%s' % (pot,path,basename)]

[UVC]
args = [basename]

[CLEAN_UV]
args = [basename]

[PLOTAUTOS]
args = [basename+'c']

[ADD_LIBRARIAN_PLOTAUTOS]
args = ['local-rtp', '%s/%s'%(parent_dirs, basename+'c.autos.png')]

[CLEAN_PLOTAUTOS]
args = [basename+'c.autos.png']

[PULL_SUBARRAY]
args = [basename+'c']

[ADD_LIBRARIAN_SUBARRAY]
args = ['local-rtp',basename+'c',parent_dirs]

[ANT_METRICS]
args = [basename+'c']

[ADD_LIBRARIAN_ANT_METRICS]
args = ['local-rtp', '%s/%s.ant_metrics.json'%(parent_dirs, basename+'c')]

[CLEAN_UVC]
args = [basename+'c']

[FIRSTCAL]
args = [basename+'c']

[ADD_LIBRARIAN_FIRSTCAL]
args = ['local-rtp',basename+'c',parent_dirs]

[OMNICAL]
args = [basename+'c']

[ADD_LIBRARIAN_OMNICAL]
args = ['local-rtp',basename+'c',parent_dirs]

[OMNI_APPLY]
args = [basename+'c']

[XRFI]
args = [basename+'c']

[ADD_LIBRARIAN_CALCLEAN]
args = ['local-rtp',basename+'c',parent_dirs]

[CLEAN_FIRSTCAL]
args = [basename+'c']

[CLEAN_ANT_METRICS]
args = [basename+'c.ant_metrics.json']

[CLEAN_OMNI]
args = [basename+'c.omni.calfits']

[CLEAN_SUBARRAY]
args = [basename+'c']

[DELETE_RAW]
args = ['local-rtp',basename]
